{"version":3,"sources":["components/Mobile/TopNavBar.tsx","assets/dummyAvatar.svg","assets/deleteIcon.svg","assets/editIcon.svg","routes/FacilityBooking/MyBookings/index.tsx"],"names":["TitleText","styled","text","StyledNavBar","NavBar","NavBarIcons","Icon","TopNavBar","title","leftIcon","leftIconComponent","rightComponent","mode","icon","type","color","onLeftClick","console","log","rightContent","MainContainer","div","BookingCard","BookingAvatar","img","BookingHeader","p","BookingSubHeader","BookingTime","BookingLabels","RightActionGroups","ActionButton","ViewMyBookings","dispatch","useDispatch","useEffect","id","date","startTime","endTime","eventName","eventCCA","facility","eventOwner","map","event","onClick","src","dummyAvatar","editIcon","deleteIcon"],"mappings":"2wBAMA,IAAMA,EAAYC,IAAOC,KAAV,KAUTC,EAAeF,YAAOG,IAAPH,CAAH,KAQZI,EAAcJ,YAAOK,IAAPL,CAAH,KA6CFM,IAnCf,YAUI,IATFC,EASC,EATDA,MACAC,EAQC,EARDA,SACAC,EAOC,EAPDA,kBACAC,EAMC,EANDA,eAOA,OACE,cAACR,EAAD,CACES,KAAK,QACLC,KACE,qCACGJ,GAAYC,GACXD,GACA,cAACJ,EAAD,CACES,KAAK,OAILC,MAAM,YAGV,cAACf,EAAD,UAAYQ,OAGhBQ,YAAa,kBAAMC,QAAQC,IAAI,gBAC/BC,aAAcR,M,iCChEL,QAA0B,yC,iCCA1B,QAA0B,wC,iCCA1B,QAA0B,sC,mhDCSzC,IAAMS,EAAgBnB,IAAOoB,IAAV,KAKbC,EAAcrB,IAAOoB,IAAV,KAWXE,EAAgBtB,IAAOuB,IAAV,KAIbC,EAAgBxB,IAAOyB,EAAV,KASbC,EAAmB1B,IAAOyB,EAAV,KAShBE,EAAc3B,IAAOyB,EAAV,KASXG,EAAgB5B,IAAOoB,IAAV,KAIbS,EAAoB7B,IAAOoB,IAAV,KAOjBU,EAAe9B,IAAOuB,IAAV,KAIH,SAASQ,IACtB,IAAMC,EAAWC,cAGjBC,qBAAU,cAEP,CAACF,IAoCJ,OACE,qCACE,cAAC,IAAD,CAAWzB,MAAO,gBAClB,cAACY,EAAD,UA1BkC,CACpC,CACEgB,GAAI,EACJC,KAAM,SACNC,UAAW,OACXC,QAAS,OACTC,UAAW,eACXC,SAAU,OACVC,SAAU,YACVC,WAAY,WAEd,CACEP,GAAI,EACJC,KAAM,SACNC,UAAW,OACXC,QAAS,OACTC,UAAW,WACXC,SAAU,SACVC,SAAU,cACVC,WAAY,QAQGC,KAAI,SAACC,GAAD,OACf,eAACvB,EAAD,CAEEwB,QAAS,aAFX,UAME,cAACvB,EAAD,CAAewB,IAAKC,MACpB,eAACnB,EAAD,WACE,cAACJ,EAAD,UAAgBoB,EAAMH,WACtB,cAACf,EAAD,UAAmBkB,EAAMJ,WACzB,eAACb,EAAD,WACE,4BAAIiB,EAAMR,OADZ,IACuBQ,EAAMP,UAD7B,OAC4CO,EAAMN,cAGpD,eAACT,EAAD,WACE,cAACC,EAAD,CAAcgB,IAAKE,MACnB,cAAClB,EAAD,CAAcgB,IAAKG,WAfhBL,EAAML","file":"static/js/16.c9e7c71f.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\r\nimport { NavBar, Icon } from 'antd-mobile'\r\nimport styled from 'styled-components'\r\n\r\nimport 'antd-mobile/dist/antd-mobile.css'\r\n\r\nconst TitleText = styled.text`\r\n  font-family: Inter;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 30px;\r\n  line-height: 14px;\r\n  color: #002642;\r\n  align-self: center;\r\n  white-space: nowrap;\r\n`\r\nconst StyledNavBar = styled(NavBar)`\r\n  &.am-navbar {\r\n    height: 70px;\r\n    background-color: #fafaf4; !important\r\n  }\r\n  margin: 15px;\r\n  max-width:100%;\r\n`\r\nconst NavBarIcons = styled(Icon)`\r\n  &.am-icon-md {\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n  padding-right: 11px;\r\n  width: 40px;\r\n  height: 40px;\r\n`\r\n// UNDONE, feel free to complete\r\nfunction TopNavBar({\r\n  title,\r\n  leftIcon,\r\n  leftIconComponent,\r\n  rightComponent,\r\n}: {\r\n  title: string\r\n  leftIcon?: boolean\r\n  leftIconComponent?: ReactElement\r\n  rightComponent?: ReactElement\r\n}) {\r\n  return (\r\n    <StyledNavBar\r\n      mode=\"light\"\r\n      icon={\r\n        <>\r\n          {leftIcon && leftIconComponent}\r\n          {!leftIcon && (\r\n            <NavBarIcons\r\n              type=\"left\"\r\n              // onClick={() => {\r\n              //   console.log('goback')\r\n              // }}\r\n              color=\"#002642\"\r\n            />\r\n          )}\r\n          <TitleText>{title}</TitleText>\r\n        </>\r\n      }\r\n      onLeftClick={() => console.log('onLeftClick')}\r\n      rightContent={rightComponent}\r\n    ></StyledNavBar>\r\n  )\r\n}\r\n\r\nexport default TopNavBar\r\n","export default __webpack_public_path__ + \"static/media/dummyAvatar.eae469b5.svg\";","export default __webpack_public_path__ + \"static/media/deleteIcon.034b482e.svg\";","export default __webpack_public_path__ + \"static/media/editIcon.66ef478c.svg\";","import React, { useEffect } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport dummyAvatar from '../../../assets/dummyAvatar.svg'\r\nimport TopNavBar from '../../../components/Mobile/TopNavBar'\r\nimport deleteIcon from '../../../assets/deleteIcon.svg'\r\nimport editIcon from '../../../assets/editIcon.svg'\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #fafaf4;\r\n`\r\nconst BookingCard = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n  background-color: #ffffff;\r\n  margin: 23px;\r\n  min-height: 70px;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n`\r\n\r\nconst BookingAvatar = styled.img`\r\n  padding: 20px;\r\n`\r\n\r\nconst BookingHeader = styled.p`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 0px;\r\n\r\n  color: rgba(0, 0, 0, 0.65);\r\n`\r\n\r\nconst BookingSubHeader = styled.p`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 10px;\r\n  line-height: 0px;\r\n\r\n  color: rgba(0, 0, 0, 0.65);\r\n`\r\n\r\nconst BookingTime = styled.p`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  line-height: 0px;\r\n\r\n  color: #de5f4c;\r\n`\r\n\r\nconst BookingLabels = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst RightActionGroups = styled.div`\r\n  position: absolute;\r\n  right: 0px;\r\n  top: 50%;\r\n  transform: translate(-17%, -50%);\r\n`\r\n\r\nconst ActionButton = styled.img`\r\n  padding: 15px;\r\n`\r\n\r\nexport default function ViewMyBookings() {\r\n  const dispatch = useDispatch()\r\n  // const { sampleStateText } = useSelector((state: RootState) => state.home)\r\n\r\n  useEffect(() => {\r\n    // fetch all default facilities\r\n  }, [dispatch])\r\n\r\n  interface eventType {\r\n    id: number\r\n    date: string\r\n    startTime: string\r\n    endTime: string\r\n    eventName: string\r\n    eventCCA: string\r\n    facility: string\r\n    eventOwner: string\r\n  }\r\n\r\n  const dummyEvents: Array<eventType> = [\r\n    {\r\n      id: 1,\r\n      date: '17 Dec',\r\n      startTime: '1530',\r\n      endTime: '1720',\r\n      eventName: 'Bonding Camp',\r\n      eventCCA: 'RHMP',\r\n      facility: 'Band Room',\r\n      eventOwner: 'not you',\r\n    },\r\n    {\r\n      id: 2,\r\n      date: '18 Dec',\r\n      startTime: '1530',\r\n      endTime: '1720',\r\n      eventName: 'Training',\r\n      eventCCA: 'Voices',\r\n      facility: 'Alumni Room',\r\n      eventOwner: 'you',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TopNavBar title={'My Bookings'} />\r\n      <MainContainer>\r\n        {dummyEvents.map((event) => (\r\n          <BookingCard\r\n            key={event.eventName}\r\n            onClick={() => {\r\n              // view booking\r\n            }}\r\n          >\r\n            <BookingAvatar src={dummyAvatar} />\r\n            <BookingLabels>\r\n              <BookingHeader>{event.facility}</BookingHeader>\r\n              <BookingSubHeader>{event.eventCCA}</BookingSubHeader>\r\n              <BookingTime>\r\n                <b>{event.date}</b> {event.startTime} to {event.endTime}\r\n              </BookingTime>\r\n            </BookingLabels>\r\n            <RightActionGroups>\r\n              <ActionButton src={editIcon} />\r\n              <ActionButton src={deleteIcon} />\r\n            </RightActionGroups>\r\n          </BookingCard>\r\n        ))}\r\n      </MainContainer>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}