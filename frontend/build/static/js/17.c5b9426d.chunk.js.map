{"version":3,"sources":["components/Mobile/TopNavBar.tsx","assets/messageIcon.svg","assets/deleteIcon.svg","assets/editIcon.svg","routes/FacilityBooking/ViewBooking/index.tsx"],"names":["TitleText","styled","text","StyledNavBar","NavBar","NavBarIcons","Icon","TopNavBar","title","leftIcon","leftIconComponent","rightComponent","mode","icon","type","color","onLeftClick","console","log","rightContent","MainContainer","div","EventCard","HeaderGroup","IdText","p","DetailsGroup","img","ActionButtonGroup","CardSubtitle","CardDurationLabel","CardTimeLabel","TimeDetails","DateTimeDetails","EventOwnerDetails","ViewBooking","params","useParams","dispatch","useDispatch","useEffect","id","date","startTime","endTime","duration","eventName","eventCCA","eventOwner","description","map","event","bookingId","style","textAlign","onClick","src","messageIcon","editIcon","deleteIcon"],"mappings":"2wBAMA,IAAMA,EAAYC,IAAOC,KAAV,KAUTC,EAAeF,YAAOG,IAAPH,CAAH,KAQZI,EAAcJ,YAAOK,IAAPL,CAAH,KA6CFM,IAnCf,YAUI,IATFC,EASC,EATDA,MACAC,EAQC,EARDA,SACAC,EAOC,EAPDA,kBACAC,EAMC,EANDA,eAOA,OACE,cAACR,EAAD,CACES,KAAK,QACLC,KACE,qCACGJ,GAAYC,GACXD,GACA,cAACJ,EAAD,CACES,KAAK,OAILC,MAAM,YAGV,cAACf,EAAD,UAAYQ,OAGhBQ,YAAa,kBAAMC,QAAQC,IAAI,gBAC/BC,aAAcR,M,iCChEL,QAA0B,yC,iCCA1B,QAA0B,wC,iCCA1B,QAA0B,sC,stECWzC,IAAMS,EAAgBnB,IAAOoB,IAAV,KAObC,EAAYrB,IAAOoB,IAAV,KAaTE,EAActB,IAAOoB,IAAV,KAOXG,EAASvB,IAAOwB,EAAV,KAMNC,EAAezB,IAAOoB,IAAV,KAIZf,EAAOL,IAAO0B,IAAV,KAMJC,EAAoB3B,IAAOoB,IAAV,KAMjBQ,EAAe5B,IAAOwB,EAAV,KAQZK,EAAoB7B,IAAOwB,EAAV,KAQjBM,EAAgB9B,IAAOwB,EAAV,KASbO,EAAc/B,IAAOoB,IAAV,KAMXY,EAAkBhC,IAAOoB,IAAV,KAKfa,EAAoBjC,IAAOoB,IAAV,KAIR,SAASc,IACtB,IAAMC,EAASC,cACTC,EAAWC,cAGjBC,qBAAU,cAEP,CAACF,IAuCJ,OACE,qCACE,cAAC,IAAD,CAAW9B,MAAO,eAClB,cAACY,EAAD,UA5BkC,CACpC,CACEqB,GAAI,EACJC,KAAM,SACNC,UAAW,OACXC,QAAS,OACTC,SAAU,UACVC,UAAW,eACXC,SAAU,OACVC,WAAY,UACZC,YAAa,uCAEf,CACER,GAAI,EACJC,KAAM,SACNC,UAAW,OACXC,QAAS,OACTC,SAAU,QACVC,UAAW,WACXC,SAAU,SACVC,WAAY,MACZC,YAAa,wCAQEC,KAAI,SAACC,GAAD,OACf,eAAC7B,EAAD,WACE,eAACC,EAAD,WACG4B,EAAML,UADT,IACoB,uBACjBK,EAAMJ,SACP,eAACvB,EAAD,oBAAeY,EAAOgB,gBAExB,eAAC1B,EAAD,WACE,eAACM,EAAD,WACE,cAACF,EAAD,UAAoBqB,EAAMN,WAC1B,eAACZ,EAAD,WACE,eAACF,EAAD,WACGoB,EAAMT,KADT,IACgBS,EAAMR,aAEtB,eAACZ,EAAD,WACGoB,EAAMT,KADT,IACgBS,EAAMP,iBAI1B,eAACV,EAAD,WACE,cAACL,EAAD,yBACA,mBAAGwB,MAAO,CAAEC,UAAW,SAAvB,SAAmCH,EAAMH,gBAE3C,qCACE,cAACnB,EAAD,8BACA,4BAAIsB,EAAMF,oBAGQ,QAArBE,EAAMH,WACL,cAACpB,EAAD,UACE,cAACtB,EAAD,CACEiD,QAAS,WACPtC,QAAQC,IAAI,gBAEdsC,IAAKC,QAIT,eAAC7B,EAAD,WACE,cAACtB,EAAD,CAAMkD,IAAKE,MACX,cAACpD,EAAD,CAAMkD,IAAKG,WAvCDR,EAAMV","file":"static/js/17.c5b9426d.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\r\nimport { NavBar, Icon } from 'antd-mobile'\r\nimport styled from 'styled-components'\r\n\r\nimport 'antd-mobile/dist/antd-mobile.css'\r\n\r\nconst TitleText = styled.text`\r\n  font-family: Inter;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 30px;\r\n  line-height: 14px;\r\n  color: #002642;\r\n  align-self: center;\r\n  white-space: nowrap;\r\n`\r\nconst StyledNavBar = styled(NavBar)`\r\n  &.am-navbar {\r\n    height: 70px;\r\n    background-color: #fafaf4; !important\r\n  }\r\n  margin: 15px;\r\n  max-width:100%;\r\n`\r\nconst NavBarIcons = styled(Icon)`\r\n  &.am-icon-md {\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n  padding-right: 11px;\r\n  width: 40px;\r\n  height: 40px;\r\n`\r\n// UNDONE, feel free to complete\r\nfunction TopNavBar({\r\n  title,\r\n  leftIcon,\r\n  leftIconComponent,\r\n  rightComponent,\r\n}: {\r\n  title: string\r\n  leftIcon?: boolean\r\n  leftIconComponent?: ReactElement\r\n  rightComponent?: ReactElement\r\n}) {\r\n  return (\r\n    <StyledNavBar\r\n      mode=\"light\"\r\n      icon={\r\n        <>\r\n          {leftIcon && leftIconComponent}\r\n          {!leftIcon && (\r\n            <NavBarIcons\r\n              type=\"left\"\r\n              // onClick={() => {\r\n              //   console.log('goback')\r\n              // }}\r\n              color=\"#002642\"\r\n            />\r\n          )}\r\n          <TitleText>{title}</TitleText>\r\n        </>\r\n      }\r\n      onLeftClick={() => console.log('onLeftClick')}\r\n      rightContent={rightComponent}\r\n    ></StyledNavBar>\r\n  )\r\n}\r\n\r\nexport default TopNavBar\r\n","export default __webpack_public_path__ + \"static/media/messageIcon.777bf996.svg\";","export default __webpack_public_path__ + \"static/media/deleteIcon.034b482e.svg\";","export default __webpack_public_path__ + \"static/media/editIcon.66ef478c.svg\";","import React, { useEffect } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport TopNavBar from '../../../components/Mobile/TopNavBar'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport deleteIcon from '../../../assets/deleteIcon.svg'\r\nimport editIcon from '../../../assets/editIcon.svg'\r\nimport messageIcon from '../../../assets/messageIcon.svg'\r\n// import { RootState } from '../../store/types'\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #fafaf4;\r\n  color: #33363a;\r\n`\r\n\r\nconst EventCard = styled.div`\r\n  background: linear-gradient(to top, #ffffff 75%, #ef9688 25%);\r\n  cursor: pointer;\r\n  margin: 23px;\r\n  padding: 15px;\r\n  min-height: 500px;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-rows: 25% 50% 25%;\r\n`\r\n\r\nconst HeaderGroup = styled.div`\r\n  padding: 10px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n`\r\n\r\nconst IdText = styled.p`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  color: #666666;\r\n`\r\nconst DetailsGroup = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst Icon = styled.img`\r\n  padding: 20px;\r\n  height: 28px;\r\n  width: 28px;\r\n`\r\n\r\nconst ActionButtonGroup = styled.div`\r\n  justify-content: space-around;\r\n  display: flex;\r\n  align-self: end;\r\n`\r\n\r\nconst CardSubtitle = styled.p`\r\n  font-style: normal;\r\n  font-weight: 900;\r\n  font-size: 14px;\r\n  line-height: 14px;\r\n  color: #33363a;\r\n`\r\n\r\nconst CardDurationLabel = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 14px;\r\n\r\n  color: #666666;\r\n`\r\n\r\nconst CardTimeLabel = styled.p`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  margin: 5px;\r\n  text-align: left;\r\n  color: #666666;\r\n`\r\n\r\nconst TimeDetails = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 35% 65%;\r\n  margin: 0px;\r\n`\r\n\r\nconst DateTimeDetails = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 50% 50%;\r\n  margin: 0px;\r\n`\r\nconst EventOwnerDetails = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n`\r\nexport default function ViewBooking() {\r\n  const params = useParams<{ bookingId: string }>()\r\n  const dispatch = useDispatch()\r\n  // const { sampleStateText } = useSelector((state: RootState) => state.home)\r\n\r\n  useEffect(() => {\r\n    // fetch all default facilities\r\n  }, [dispatch])\r\n\r\n  interface eventType {\r\n    id: number\r\n    date: string\r\n    startTime: string\r\n    endTime: string\r\n    duration: string\r\n    eventName: string\r\n    eventCCA: string\r\n    eventOwner: string\r\n    description: string\r\n  }\r\n\r\n  const dummyEvents: Array<eventType> = [\r\n    {\r\n      id: 1,\r\n      date: '17 Dec',\r\n      startTime: '1530',\r\n      endTime: '1720',\r\n      duration: '20 mins',\r\n      eventName: 'Bonding Camp',\r\n      eventCCA: 'RHMP',\r\n      eventOwner: 'not you',\r\n      description: 'Backup location! Feel free to PM me',\r\n    },\r\n    {\r\n      id: 2,\r\n      date: '18 Dec',\r\n      startTime: '1530',\r\n      endTime: '1720',\r\n      duration: '2 hrs',\r\n      eventName: 'Training',\r\n      eventCCA: 'Voices',\r\n      eventOwner: 'you',\r\n      description: 'Backup location! Feel free to PM me',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <TopNavBar title={'View Event'} />\r\n      <MainContainer>\r\n        {dummyEvents.map((event) => (\r\n          <EventCard key={event.id}>\r\n            <HeaderGroup>\r\n              {event.eventName} <br />\r\n              {event.eventCCA}\r\n              <IdText>RHEID-{params.bookingId}</IdText>\r\n            </HeaderGroup>\r\n            <DetailsGroup>\r\n              <TimeDetails>\r\n                <CardDurationLabel>{event.duration}</CardDurationLabel>\r\n                <DateTimeDetails>\r\n                  <CardTimeLabel>\r\n                    {event.date} {event.startTime}\r\n                  </CardTimeLabel>\r\n                  <CardTimeLabel>\r\n                    {event.date} {event.endTime}\r\n                  </CardTimeLabel>\r\n                </DateTimeDetails>\r\n              </TimeDetails>\r\n              <EventOwnerDetails>\r\n                <CardSubtitle>Created by</CardSubtitle>\r\n                <p style={{ textAlign: 'right' }}>{event.eventOwner}</p>\r\n              </EventOwnerDetails>\r\n              <>\r\n                <CardSubtitle>Additional Note</CardSubtitle>\r\n                <p>{event.description}</p>\r\n              </>\r\n            </DetailsGroup>\r\n            {event.eventOwner !== 'you' ? (\r\n              <ActionButtonGroup>\r\n                <Icon\r\n                  onClick={() => {\r\n                    console.log('contact yes')\r\n                  }}\r\n                  src={messageIcon}\r\n                />\r\n              </ActionButtonGroup>\r\n            ) : (\r\n              <ActionButtonGroup>\r\n                <Icon src={editIcon} />\r\n                <Icon src={deleteIcon} />\r\n              </ActionButtonGroup>\r\n            )}\r\n          </EventCard>\r\n        ))}\r\n      </MainContainer>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}